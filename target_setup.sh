#!/bin/bash
# =============================================================================
# TARGET_SETUP.SH - Configura√ß√£o de alvos vulner√°veis para pentest
# OWASP Juice Shop + DVWA + WebGoat
# =============================================================================

set -e
exec > >(tee /var/log/target-setup.log) 2>&1

# Vari√°veis do template
STUDENT_NAME="${student_name}"
LAB_NAME="${lab_name}"
JUICE_SHOP_PORT="${juice_shop_port}"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "$${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1$${NC}"
}

error() {
    echo -e "$${RED}[ERROR] $1$${NC}"
}

warning() {
    echo -e "$${YELLOW}[WARNING] $1$${NC}"
}

log "üéØ Iniciando configura√ß√£o de alvos vulner√°veis para $${STUDENT_NAME}"
log "üìù Laborat√≥rio: $${LAB_NAME}"

# Atualizar sistema
log "üì¶ Atualizando sistema Ubuntu..."
export DEBIAN_FRONTEND=noninteractive
apt-get update -y
apt-get upgrade -y

# Instalar depend√™ncias
log "üîß Instalando depend√™ncias..."
apt-get install -y \
    curl \
    wget \
    git \
    unzip \
    vim \
    nano \
    htop \
    tree \
    net-tools \
    nginx \
    mysql-server \
    php \
    php-fpm \
    php-mysql \
    php-gd \
    php-xml \
    php-mbstring \
    php-curl \
    python3 \
    python3-pip \
    default-jdk \
    docker.io \
    docker-compose

# Configurar MySQL
log "üóÑÔ∏è Configurando MySQL..."
systemctl start mysql
systemctl enable mysql

# Configurar usu√°rio MySQL para aplica√ß√µes vulner√°veis
mysql -e "CREATE DATABASE dvwa;"
mysql -e "CREATE DATABASE webgoat;"
mysql -e "CREATE USER 'dvwa'@'localhost' IDENTIFIED BY 'dvwa_password';"
mysql -e "GRANT ALL PRIVILEGES ON dvwa.* TO 'dvwa'@'localhost';"
mysql -e "CREATE USER 'webgoat'@'localhost' IDENTIFIED BY 'webgoat_password';"
mysql -e "GRANT ALL PRIVILEGES ON webgoat.* TO 'webgoat'@'localhost';"
mysql -e "FLUSH PRIVILEGES;"

# Instalar Node.js (vers√£o LTS)
log "üü¢ Instalando Node.js..."
curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
apt-get install -y nodejs

# Verificar instala√ß√µes
node_version=$(node --version)
npm_version=$(npm --version)
log "‚úÖ Node.js $${node_version} e npm $${npm_version} instalados"

# =============================================================================
# OWASP JUICE SHOP
# =============================================================================

log "üßÉ Configurando OWASP Juice Shop..."

# Criar usu√°rio para Juice Shop
useradd -m -s /bin/bash juiceshop
usermod -aG sudo juiceshop

# Diret√≥rio de instala√ß√£o
JUICE_SHOP_DIR="/opt/juice-shop"
mkdir -p $${JUICE_SHOP_DIR}
chown juiceshop:juiceshop $${JUICE_SHOP_DIR}

# Clonar e configurar Juice Shop
cd $${JUICE_SHOP_DIR}
sudo -u juiceshop git clone https://github.com/juice-shop/juice-shop.git .

# Instalar depend√™ncias
log "üì¶ Instalando depend√™ncias do Juice Shop..."
sudo -u juiceshop npm install --production

# Configura√ß√£o personalizada
cat > $${JUICE_SHOP_DIR}/config/custom.yml << EOF
application:
  name: 'OWASP Juice Shop - Lab $${STUDENT_NAME}'
  welcomeBanner:
    showOnFirstStart: true
    title: 'Laborat√≥rio de Pentest'
    message: 'Bem-vindo ao ambiente de teste, $${STUDENT_NAME}! Este √© um alvo INTENCIONALMENTE VULNER√ÅVEL.'

server:
  port: $${JUICE_SHOP_PORT}

challenges:
  showHints: true
  showMitigations: true
  
ctf:
  showFlagsInNotifications: true

hackingInstructor:
  isEnabled: true
EOF

chown juiceshop:juiceshop $${JUICE_SHOP_DIR}/config/custom.yml

# Criar servi√ßo systemd para Juice Shop
cat > /etc/systemd/system/juice-shop.service << EOF
[Unit]
Description=OWASP Juice Shop
After=network.target

[Service]
Type=simple
User=juiceshop
WorkingDirectory=/opt/juice-shop
ExecStart=/usr/bin/npm start
Restart=always
RestartSec=10
Environment=NODE_ENV=custom
Environment=PORT=$${JUICE_SHOP_PORT}

[Install]
WantedBy=multi-user.target
EOF

# =============================================================================
# DVWA (Damn Vulnerable Web Application)
# =============================================================================

log "üï∑Ô∏è Configurando DVWA..."

# Baixar DVWA
cd /var/www/html
git clone https://github.com/digininja/DVWA.git dvwa
chown -R www-data:www-data dvwa

# Configurar DVWA
cd dvwa
cp config/config.inc.php.dist config/config.inc.php

# Configurar conex√£o com banco
sed -i "s/\$_DVWA\['db_password'\] = 'p@ssw0rd';/\$_DVWA['db_password'] = 'dvwa_password';/" config/config.inc.php
sed -i "s/\$_DVWA\['db_user'\] = 'dvwa';/\$_DVWA['db_user'] = 'dvwa';/" config/config.inc.php
sed -i "s/\$_DVWA\['db_database'\] = 'dvwa';/\$_DVWA['db_database'] = 'dvwa';/" config/config.inc.php

# Configurar permiss√µes
chmod 666 hackable/uploads/
chmod 777 external/phpids/0.6/lib/IDS/tmp/phpids_log.txt

# =============================================================================
# WEBGOAT
# =============================================================================

log "üêê Configurando WebGoat..."

# Baixar WebGoat
mkdir -p /opt/webgoat
cd /opt/webgoat
wget https://github.com/WebGoat/WebGoat/releases/latest/download/webgoat-8.2.2.jar -O webgoat.jar
chown -R www-data:www-data /opt/webgoat

# Criar servi√ßo para WebGoat
cat > /etc/systemd/system/webgoat.service << 'EOF'
[Unit]
Description=WebGoat vulnerable web application
After=network.target

[Service]
Type=simple
User=www-data
WorkingDirectory=/opt/webgoat
ExecStart=/usr/bin/java -jar webgoat.jar --server.port=8080 --server.address=0.0.0.0
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# =============================================================================
# MUTILLIDAE II
# =============================================================================

log "ü¶ü Configurando Mutillidae II..."

# Baixar Mutillidae
cd /var/www/html
git clone https://github.com/webpwnized/mutillidae.git
chown -R www-data:www-data mutillidae

# Configurar banco para Mutillidae
mysql -e "CREATE DATABASE mutillidae;"
mysql -e "CREATE USER 'mutillidae'@'localhost' IDENTIFIED BY 'mutillidae';"
mysql -e "GRANT ALL PRIVILEGES ON mutillidae.* TO 'mutillidae'@'localhost';"
mysql -e "FLUSH PRIVILEGES;"

# =============================================================================
# CONFIGURA√á√ÉO DO NGINX
# =============================================================================

log "üåê Configurando Nginx..."

# Backup da configura√ß√£o padr√£o
cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup

# Configura√ß√£o principal do Nginx
cat > /etc/nginx/sites-available/vulnerable-apps << EOF
# P√°gina principal do laborat√≥rio
server {
    listen 80 default_server;
    server_name _;
    root /var/www/html/lab-dashboard;
    index index.html index.php;
    
    location / {
        try_files \$uri \$uri/ =404;
    }
    
    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
    }
}

# DVWA
server {
    listen 80;
    server_name dvwa.local;
    root /var/www/html/dvwa;
    index index.php index.html;
    
    location / {
        try_files \$uri \$uri/ =404;
    }
    
    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
    }
}

# Mutillidae
server {
    listen 80;
    server_name mutillidae.local;
    root /var/www/html/mutillidae;
    index index.php index.html;
    
    location / {
        try_files \$uri \$uri/ =404;
    }
    
    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
    }
}

# Proxy para Juice Shop
server {
    listen 80;
    server_name juiceshop.local;
    
    location / {
        proxy_pass http://localhost:${JUICE_SHOP_PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}

# Proxy para WebGoat
server {
    listen 80;
    server_name webgoat.local;
    
    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

# Ativar configura√ß√£o
ln -sf /etc/nginx/sites-available/vulnerable-apps /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# =============================================================================
# DASHBOARD DO LABORAT√ìRIO
# =============================================================================

log "üìä Criando dashboard do laborat√≥rio..."

# Criar diret√≥rio para o dashboard
mkdir -p /var/www/html/lab-dashboard
chown -R www-data:www-data /var/www/html/lab-dashboard

# P√°gina principal do dashboard
cat > /var/www/html/lab-dashboard/index.html << 'EOF'
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Laborat√≥rio de Ciberseguran√ßa</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }
        
        .header {
            text-align: center;
            margin-bottom: 40px;
            border-bottom: 2px solid #eee;
            padding-bottom: 20px;
        }
        
        .header h1 {
            color: #333;
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        .header .subtitle {
            color: #666;
            font-size: 1.2em;
        }
        
        .warning {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 30px;
            color: #856404;
        }
        
        .warning strong {
            color: #e17055;
        }
        
        .targets-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 25px;
            margin-bottom: 30px;
        }
        
        .target-card {
            background: white;
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border-left: 4px solid #667eea;
            transition: transform 0.3s ease;
        }
        
        .target-card:hover {
            transform: translateY(-5px);
        }
        
        .target-card h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.4em;
        }
        
        .target-card p {
            color: #666;
            margin-bottom: 15px;
            line-height: 1.6;
        }
        
        .target-card .access-links {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .btn {
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
            font-weight: bold;
            transition: all 0.3s ease;
            display: inline-block;
        }
        
        .btn-primary {
            background: #667eea;
            color: white;
        }
        
        .btn-primary:hover {
            background: #5a67d8;
        }
        
        .btn-secondary {
            background: #48bb78;
            color: white;
        }
        
        .btn-secondary:hover {
            background: #38a169;
        }
        
        .info-section {
            background: #f7fafc;
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
        }
        
        .info-section h3 {
            color: #333;
            margin-bottom: 15px;
        }
        
        .info-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
        }
        
        .info-item {
            background: white;
            padding: 15px;
            border-radius: 8px;
            border-left: 3px solid #48bb78;
        }
        
        .status-indicator {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-right: 8px;
        }
        
        .status-online {
            background: #48bb78;
        }
        
        .status-offline {
            background: #e53e3e;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üõ°Ô∏è Laborat√≥rio de Ciberseguran√ßa</h1>
            <p class="subtitle">Ambiente de Aprendizado de Pentest - ${STUDENT_NAME}</p>
        </div>
        
        <div class="warning">
            <strong>‚ö†Ô∏è ATEN√á√ÉO:</strong> Este laborat√≥rio cont√©m aplica√ß√µes INTENCIONALMENTE VULNER√ÅVEIS para fins educacionais. 
            Use apenas em ambiente controlado e para aprendizado de t√©cnicas de seguran√ßa ofensiva.
        </div>
        
        <div class="targets-grid">
            <div class="target-card">
                <h3>üßÉ OWASP Juice Shop</h3>
                <p>Aplica√ß√£o moderna vulner√°vel com desafios gamificados. Ideal para aprender sobre vulnerabilidades web modernas como XSS, SQL Injection, autentica√ß√£o quebrada e muito mais.</p>
                <div class="access-links">
                    <a href="http://$(hostname -I | awk '{print $1}'):${JUICE_SHOP_PORT}" class="btn btn-primary" target="_blank">Acessar Aplica√ß√£o</a>
                    <a href="http://juiceshop.local" class="btn btn-secondary" target="_blank">Via Domain</a>
                </div>
            </div>
            
            <div class="target-card">
                <h3>üï∑Ô∏è DVWA</h3>
                <p>Damn Vulnerable Web Application - aplica√ß√£o PHP/MySQL com diferentes n√≠veis de seguran√ßa. Perfeita para praticar t√©cnicas b√°sicas de pentest web.</p>
                <div class="access-links">
                    <a href="/dvwa" class="btn btn-primary" target="_blank">Acessar DVWA</a>
                    <a href="http://dvwa.local" class="btn btn-secondary" target="_blank">Via Domain</a>
                </div>
            </div>
            
            <div class="target-card">
                <h3>üêê WebGoat</h3>
                <p>Aplica√ß√£o Java educacional da OWASP com li√ß√µes interativas sobre seguran√ßa de aplica√ß√µes web. Inclui tutoriais passo-a-passo.</p>
                <div class="access-links">
                    <a href="http://$(hostname -I | awk '{print $1}'):8080/WebGoat" class="btn btn-primary" target="_blank">Acessar WebGoat</a>
                    <a href="http://webgoat.local" class="btn btn-secondary" target="_blank">Via Domain</a>
                </div>
            </div>
            
            <div class="target-card">
                <h3>ü¶ü Mutillidae II</h3>
                <p>Aplica√ß√£o PHP extremamente vulner√°vel com OWASP Top 10 e al√©m. Inclui muitas vulnerabilidades para pr√°tica intensiva.</p>
                <div class="access-links">
                    <a href="/mutillidae" class="btn btn-primary" target="_blank">Acessar Mutillidae</a>
                    <a href="http://mutillidae.local" class="btn btn-secondary" target="_blank">Via Domain</a>
                </div>
            </div>
        </div>
        
        <div class="info-section">
            <h3>üìã Informa√ß√µes do Laborat√≥rio</h3>
            <div class="info-list">
                <div class="info-item">
                    <strong>üéØ IP do Alvo:</strong><br>
                    $(hostname -I | awk '{print $1}') (Interno)<br>
                    $(curl -s http://169.254.169.254/latest/meta-data/public-ipv4) (Externo)
                </div>
                <div class="info-item">
                    <strong>üåê Rede:</strong><br>
                    Subnet: $(ip route | grep 'src' | head -1 | awk '{print $1}')<br>
                    Gateway: $(ip route | grep default | awk '{print $3}')
                </div>
                <div class="info-item">
                    <strong>üíª Sistema:</strong><br>
                    OS: $(lsb_release -d | cut -f2)<br>
                    Kernel: $(uname -r)
                </div>
                <div class="info-item">
                    <strong>‚è∞ Uptime:</strong><br>
                    $(uptime -p)<br>
                    Iniciado: $(uptime -s)
                </div>
            </div>
        </div>
        
        <div class="info-section">
            <h3>üîß Status dos Servi√ßos</h3>
            <div class="info-list">
                <div class="info-item">
                    <span class="status-indicator status-online"></span>
                    <strong>Nginx:</strong> Ativo
                </div>
                <div class="info-item">
                    <span class="status-indicator status-online"></span>
                    <strong>MySQL:</strong> Ativo
                </div>
                <div class="info-item">
                    <span class="status-indicator status-online"></span>
                    <strong>PHP-FPM:</strong> Ativo
                </div>
            </div>
        </div>
        
        <div class="info-section">
            <h3>üìö Recursos de Aprendizado</h3>
            <div class="info-list">
                <div class="info-item">
                    <strong>üéì OWASP Top 10:</strong><br>
                    <a href="https://owasp.org/www-project-top-ten/" target="_blank">owasp.org/www-project-top-ten</a>
                </div>
                <div class="info-item">
                    <strong>üìñ Web Security Academy:</strong><br>
                    <a href="https://portswigger.net/web-security" target="_blank">portswigger.net/web-security</a>
                </div>
                <div class="info-item">
                    <strong>üõ†Ô∏è Burp Suite:</strong><br>
                    Proxy para intercepta√ß√£o de requisi√ß√µes
                </div>
                <div class="info-item">
                    <strong>üîç OWASP ZAP:</strong><br>
                    Scanner de vulnerabilidades web
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // Verificar status dos servi√ßos via JavaScript
        function checkServiceStatus() {
            const services = [
                { name: 'Juice Shop', url: 'http://$(hostname -I | awk '{print $1}'):${JUICE_SHOP_PORT}', element: 'juice-shop-status' },
                { name: 'WebGoat', url: 'http://$(hostname -I | awk '{print $1}'):8080/WebGoat', element: 'webgoat-status' }
            ];
            
            // Implementar verifica√ß√£o de status em tempo real se necess√°rio
        }
        
        // Atualizar timestamp
        setInterval(function() {
            document.querySelector('.info-section:last-child').innerHTML += 
                '<p style="text-align: center; margin-top: 20px; color: #666;">√öltima atualiza√ß√£o: ' + 
                new Date().toLocaleString('pt-BR') + '</p>';
        }, 60000);
    </script>
</body>
</html>
EOF

# =============================================================================
# CONFIGURA√á√ïES FINAIS
# =============================================================================

# Configurar PHP
log "üêò Configurando PHP..."
sed -i 's/allow_url_include = Off/allow_url_include = On/' /etc/php/*/fpm/php.ini
sed -i 's/display_errors = Off/display_errors = On/' /etc/php/*/fpm/php.ini

# Reiniciar servi√ßos
systemctl restart php*-fpm
systemctl restart nginx
systemctl restart mysql

# Habilitar servi√ßos
systemctl enable nginx
systemctl enable mysql
systemctl enable php*-fpm
systemctl enable juice-shop
systemctl enable webgoat

# Iniciar aplica√ß√µes vulner√°veis
log "üöÄ Iniciando aplica√ß√µes vulner√°veis..."
systemctl start juice-shop
sleep 10
systemctl start webgoat

# Configurar firewall b√°sico
log "üî• Configurando firewall..."
ufw --force enable
ufw allow 22/tcp comment 'SSH'
ufw allow 80/tcp comment 'HTTP'
ufw allow 443/tcp comment 'HTTPS'
ufw allow ${JUICE_SHOP_PORT}/tcp comment 'Juice Shop'
ufw allow 8080/tcp comment 'WebGoat'

# Criar scripts √∫teis
log "üìù Criando scripts de administra√ß√£o..."

# Script de status
cat > /home/ubuntu/target-status.sh << 'EOF'
#!/bin/bash
echo "üéØ STATUS DOS ALVOS VULNER√ÅVEIS"
echo "================================="
echo ""

echo "üíª Sistema:"
echo "   Uptime: $(uptime -p)"
echo "   Load: $(uptime | awk -F'load average:' '{print $2}')"
echo "   Memory: $(free -h | grep Mem | awk '{print $3"/"$2}')"
echo "   Disk: $(df -h / | tail -1 | awk '{print $3"/"$2" ("$5" usado)"}')"
echo ""

echo "üåê Rede:"
echo "   IP P√∫blico: $(curl -s --max-time 5 ipinfo.io/ip || echo 'N/A')"
echo "   IP Privado: $(hostname -I | awk '{print $1}')"
echo ""

echo "üõ†Ô∏è  Servi√ßos:"
printf "   %-15s %s\n" "Nginx:" "$(systemctl is-active nginx)"
printf "   %-15s %s\n" "MySQL:" "$(systemctl is-active mysql)"
printf "   %-15s %s\n" "PHP-FPM:" "$(systemctl is-active php*-fpm | head -1)"
printf "   %-15s %s\n" "Juice Shop:" "$(systemctl is-active juice-shop)"
printf "   %-15s %s\n" "WebGoat:" "$(systemctl is-active webgoat)"
echo ""

echo "üéØ Aplica√ß√µes Vulner√°veis:"
printf "   %-15s %s\n" "Dashboard:" "http://$(hostname -I | awk '{print $1}')"
printf "   %-15s %s\n" "Juice Shop:" "http://$(hostname -I | awk '{print $1}'):${JUICE_SHOP_PORT}"
printf "   %-15s %s\n" "DVWA:" "http://$(hostname -I | awk '{print $1}')/dvwa"
printf "   %-15s %s\n" "WebGoat:" "http://$(hostname -I | awk '{print $1}'):8080/WebGoat"
printf "   %-15s %s\n" "Mutillidae:" "http://$(hostname -I | awk '{print $1}')/mutillidae"
echo ""

echo "üîç Verifica√ß√£o de Conectividade:"
for port in 80 ${JUICE_SHOP_PORT} 8080; do
    if netstat -tnl | grep -q ":$port "; then
        printf "   %-15s %s\n" "Porta $port:" "‚úÖ Aberta"
    else
        printf "   %-15s %s\n" "Porta $port:" "‚ùå Fechada"
    fi
done
EOF

chmod +x /home/ubuntu/target-status.sh
chown ubuntu:ubuntu /home/ubuntu/target-status.sh

# Script de restart das aplica√ß√µes
cat > /home/ubuntu/restart-targets.sh << 'EOF'
#!/bin/bash
echo "üîÑ Reiniciando alvos vulner√°veis..."

echo "Parando servi√ßos..."
sudo systemctl stop juice-shop webgoat

echo "Aguardando 5 segundos..."
sleep 5

echo "Iniciando servi√ßos..."
sudo systemctl start juice-shop
sleep 10
sudo systemctl start webgoat

echo "Verificando status..."
sudo systemctl status juice-shop --no-pager -l
sudo systemctl status webgoat --no-pager -l

echo "‚úÖ Restart conclu√≠do!"
EOF

chmod +x /home/ubuntu/restart-targets.sh
chown ubuntu:ubuntu /home/ubuntu/restart-targets.sh

# Arquivo de informa√ß√µes
cat > /home/ubuntu/TARGET_INFO.txt << EOF
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üéØ ALVOS VULNER√ÅVEIS - LABORAT√ìRIO DE CIBERSEGURAN√áA
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Estudante: ${STUDENT_NAME}
Laborat√≥rio: ${LAB_NAME}
Data de cria√ß√£o: $(date)
IP Interno: $(hostname -I | awk '{print $1}')
IP Externo: $(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)

üåê APLICA√á√ïES DISPON√çVEIS:

üìä Dashboard Principal:
   http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)

üßÉ OWASP Juice Shop:
   http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):${JUICE_SHOP_PORT}
   Tipo: Aplica√ß√£o Node.js moderna vulner√°vel
   Foco: OWASP Top 10, desafios gamificados

üï∑Ô∏è  DVWA:
   http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)/dvwa
   Tipo: Aplica√ß√£o PHP cl√°ssica
   Login padr√£o: admin/password
   Foco: Vulnerabilidades web b√°sicas

üêê WebGoat:
   http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):8080/WebGoat
   Tipo: Aplica√ß√£o Java educacional
   Foco: Li√ß√µes interativas da OWASP

ü¶ü Mutillidae II:
   http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)/mutillidae
   Tipo: Aplica√ß√£o PHP extremamente vulner√°vel
   Foco: OWASP Top 10 e vulnerabilidades avan√ßadas

üîß CREDENCIAIS PADR√ÉO:

DVWA:
   Usu√°rio: admin
   Senha: password

WebGoat:
   Criar conta na primeira vez

Mutillidae:
   Usu√°rio: admin
   Senha: admin

MySQL (para an√°lise):
   dvwa/dvwa_password (banco: dvwa)
   webgoat/webgoat_password (banco: webgoat)
   mutillidae/mutillidae (banco: mutillidae)

üõ†Ô∏è  SCRIPTS √öTEIS:

./target-status.sh     - Status dos alvos
./restart-targets.sh   - Reiniciar aplica√ß√µes

üìö DICAS DE PENTEST:

1. Comece com o dashboard para vis√£o geral
2. Use Burp Suite ou ZAP como proxy
3. Inicie com Juice Shop (mais moderno)
4. DVWA tem n√≠veis de dificuldade ajust√°veis
5. WebGoat tem tutoriais integrados
6. Mutillidae √© o mais complexo

‚ö†Ô∏è  IMPORTANTE:
- Estas aplica√ß√µes s√£o VULNER√ÅVEIS por design
- Use apenas para fins educacionais
- Documente suas descobertas

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
EOF

chown ubuntu:ubuntu /home/ubuntu/TARGET_INFO.txt

# Configurar MOTD
cat > /etc/motd << 'EOF'

‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà                                                  ‚ñà
‚ñà     üéØ ALVOS VULNER√ÅVEIS - LAB CIBERSEGURAN√áA     ‚ñà
‚ñà                                                  ‚ñà
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà

üßÉ Aplica√ß√µes dispon√≠veis para pentest:
   ‚Ä¢ OWASP Juice Shop  ‚Ä¢ DVWA  ‚Ä¢ WebGoat  ‚Ä¢ Mutillidae

üìä Dashboard: http://<IP_P√öBLICO>
üìö Informa√ß√µes: cat TARGET_INFO.txt
üîß Status: ./target-status.sh

‚ö†Ô∏è  APLICA√á√ïES INTENCIONALMENTE VULNER√ÅVEIS!

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
EOF

# Verifica√ß√µes finais
log "üîç Executando verifica√ß√µes finais..."

# Aguardar aplica√ß√µes iniciarem
sleep 15

# Verificar Juice Shop
if curl -f http://localhost:${JUICE_SHOP_PORT} > /dev/null 2>&1; then
    log "‚úÖ Juice Shop est√° funcionando"
else
    error "‚ùå Problema com Juice Shop"
    systemctl status juice-shop --no-pager
fi

# Verificar WebGoat
if curl -f http://localhost:8080 > /dev/null 2>&1; then
    log "‚úÖ WebGoat est√° funcionando"
else
    warning "‚ö†Ô∏è WebGoat ainda inicializando ou com problema"
fi

# Verificar DVWA
if [ -f /var/www/html/dvwa/index.php ]; then
    log "‚úÖ DVWA instalado"
else
    error "‚ùå Problema com DVWA"
fi

# Verificar Nginx
if nginx -t; then
    log "‚úÖ Nginx configurado corretamente"
else
    error "‚ùå Problema na configura√ß√£o do Nginx"
fi

# Informa√ß√µes finais
log "üéâ Configura√ß√£o dos alvos vulner√°veis conclu√≠da!"
log "üìç Acesse o dashboard em: http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
log "üßÉ Juice Shop: http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):${JUICE_SHOP_PORT}"
log "üìö Informa√ß√µes detalhadas: cat /home/ubuntu/TARGET_INFO.txt"

exit 0